{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KHUSHI\\\\Desktop\\\\todo-2\\\\mern-todo-app\\\\frontend\\\\src\\\\components\\\\forgotPassword\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSearchParams } from \"react-router-dom\";\nimport axios from \"../../Axios/axios.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPassword() {\n  _s();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [searchParams] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setMessage(\"\");\n    setError(\"\");\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match\");\n      setIsLoading(false);\n    } else {\n      try {\n        const token = searchParams.get(\"token\");\n        const res = await axios.post(\"/forgotPassword/resetPassword\", {\n          token,\n          password\n        });\n        setMessage(res.data.message);\n      } catch (error) {\n        setError(error.response.data.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold p-5\",\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"w-2/5 mx-auto p-5\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"p-3 rounded-md shadow-lg w-full my-4\",\n        placeholder: \"Enter new password\",\n        onChange: e => setPassword(e.target.value),\n        value: password,\n        required: true,\n        autoComplete: \"false\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"p-3 rounded-md shadow-lg w-full my-4\",\n        placeholder: \"Confirm new password\",\n        onChange: e => setConfirmPassword(e.target.value),\n        value: confirmPassword,\n        required: true,\n        autoComplete: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"p-2 rounded-md shadow-md bg-indigo-700 text-white px-5 mt-10 disabled:bg-indigo-400\",\n        disabled: isLoading,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-10 bg-green-700 mx-auto w-2/5 p-3 rounded-lg shadow-lg text-white text-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 28\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-10 bg-red-700 mx-auto w-2/5 p-3 rounded-lg shadow-lg text-white text-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(ResetPassword, \"7o5BxmyKeXgfuflcAkO/XpDi5Jo=\", false, function () {\n  return [useSearchParams];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useSearchParams","axios","ResetPassword","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","error","setError","searchParams","isLoading","setIsLoading","handleSubmit","e","preventDefault","token","get","res","post","data","response","target","value"],"sources":["C:/Users/KHUSHI/Desktop/todo-2/mern-todo-app/frontend/src/components/forgotPassword/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport axios from \"../../Axios/axios.js\";\r\n\r\nfunction ResetPassword() {\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [searchParams] = useSearchParams();\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setIsLoading(true)\r\n        setMessage(\"\");\r\n        setError(\"\");\r\n        if (password !== confirmPassword) {\r\n            setError(\"Passwords do not match\");\r\n            setIsLoading(false)\r\n        } else {\r\n            try {\r\n                const token = searchParams.get(\"token\");\r\n                const res = await axios.post(\"/forgotPassword/resetPassword\", {token, password })\r\n                setMessage(res.data.message);\r\n            } catch (error) {\r\n                setError(error.response.data.message)\r\n            }finally{\r\n                setIsLoading(false)\r\n            }\r\n           \r\n        }\r\n    }\r\n    return (\r\n        <div className='text-center'>\r\n            <h1 className='text-xl font-bold p-5'>Reset Password</h1>\r\n            <form className=\"w-2/5 mx-auto p-5\" onSubmit={handleSubmit}>\r\n                <input type=\"password\"\r\n                    className=\"p-3 rounded-md shadow-lg w-full my-4\"\r\n                    placeholder=\"Enter new password\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    value={password}\r\n                    required\r\n                    autoComplete='false'\r\n                />\r\n                <input type=\"password\"\r\n                    className=\"p-3 rounded-md shadow-lg w-full my-4\"\r\n                    placeholder=\"Confirm new password\"\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    value={confirmPassword}\r\n                    required\r\n                    autoComplete={false}\r\n                />\r\n                <button className=\"p-2 rounded-md shadow-md bg-indigo-700 text-white px-5 mt-10 disabled:bg-indigo-400\" disabled={isLoading}>Reset</button>\r\n            </form>\r\n            {\r\n                message && <div className='mt-10 bg-green-700 mx-auto w-2/5 p-3 rounded-lg shadow-lg text-white text-lg'>\r\n                    <p>\r\n                        {message}\r\n                    </p>\r\n                </div>\r\n            }\r\n            {\r\n                error && <div className='mt-10 bg-red-700 mx-auto w-2/5 p-3 rounded-lg shadow-lg text-white text-lg'>\r\n                    <p>\r\n                        {error}\r\n                    </p>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResetPassword;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}